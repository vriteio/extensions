var f=Symbol("usableEnv"),s=Symbol("value"),i=Symbol("id"),p=Symbol("componentName"),r={data:{},func:{},views:{},currentScope:null},a={},d=()=>`_${Math.random().toString(36).substr(2,9)}`,b=new Proxy({},{get(n,e){let t=()=>{};return Object.defineProperty(t,p,{value:e}),t}});var c=n=>{let e=d(),t=n;return Object.defineProperty(t,i,{value:e}),r.func[e]=t,r.currentScope&&r.currentScope.func.push(e),t};var u=n=>{let e=a[n];e&&(e.func.forEach(t=>{delete r.func[t]}),e.temp.forEach(t=>{let o=r.data.temp;o()&&delete o()[t]}))},l=n=>({getEnvironment:()=>r,getMetadata:()=>({__value:s,__id:i,__componentName:p,__usableEnv:f}),generateRuntimeSpec:()=>({...n,onUninstall:n.onUninstall?.[i],onConfigure:n.onConfigure?.[i],configurationView:n.configurationView?.[i],contentPieceView:n.contentPieceView?.[i],blockActions:n.blockActions?.map(e=>({...e,view:e.view[i]}))}),generateView:async(e,t)=>{let o=r.views[e]?.[s];if(o){r.currentScope={func:[],temp:[]};let m=await o(t);return a[`view:${e}`]=r.currentScope,r.currentScope=null,m}return{component:"",slot:[]}},runFunction:async(e,t)=>{let o=r.func[e];o&&(r.currentScope={func:[],temp:[]},await o(t),a[`func:${e}`]=r.currentScope,r.currentScope=null,u(`func:${e}`))},removeScope:u});var g=l({onConfigure:c(async n=>{(await n.client.transformers.list()).find(o=>o.label==="MDX"&&o.input==="https://extensions.vrite.io/mdx/input"&&o.output==="https://extensions.vrite.io/mdx/output")||await n.client.transformers.create({input:"https://extensions.vrite.io/mdx/input",output:"https://extensions.vrite.io/mdx/output",maxBatchSize:100,label:"MDX"})}),onUninstall:c(async n=>{let e=await n.client.transformers.list();if(e.length>0){let t=e.find(o=>o.label==="MDX"&&o.input==="https://extensions.vrite.io/mdx/input"&&o.output==="https://extensions.vrite.io/mdx/output");t&&await n.client.transformers.delete({id:t?.id})}})});export{g as default};
